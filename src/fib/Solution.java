package fib;

/**
 * No.509 斐波那契数
 *
 * 斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：
 * F(0) = 0，F(1) = 1
 * F(n) = F(n - 1) + F(n - 2)，其中 n > 1
 * 给定 n ，请计算 F(n) 。
 */

public class Solution {

    /**
     * 动态规划五步曲：
     * 1. 确定dp数组及下标的含义
     * 2. 确定递推公式
     * 3. dp数组如何初始化
     * 4. 确定遍历顺序
     * 5. 举例推导验证dp数组
     */
    public int fib(int n) {
        if (n <= 1) {
            return n;
        }

        int[] dp = new int[n + 1];  // 1. dp[i]代表数i的斐波那契值

        // 2. 递推公式：题目已给，F(n) = F(n - 1) + F(n - 2)，其中 n > 1

        // 3. dp数组初始化
        dp[0] = 0;
        dp[1] = 1;

        // 4. 遍历顺序：由于每个斐波那契值都只与它前两个斐波那契值有关，因此从前往后遍历
        for (int i = 2; i <= n; i++) {
            dp[i] = dp[i-1] + dp[i-2];
        }

        return dp[n];
    }
}
